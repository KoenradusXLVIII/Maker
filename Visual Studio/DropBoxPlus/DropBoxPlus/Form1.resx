<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIAAoBQAAJgAAACAgAAABACAAKBQAAE4FAAAoAAAAEAAAACAAAAABACAAAAAAAAAF
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5nsAH+t5ALPsegCr7XYAHAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/gAAE6XkAcup5APTqegD/6noA/+t6
        APHreQBw/1UAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrewA063kAyup6AP/qegD/6noA/+p6
        AP/qegD/6noA/+t6AMvseAA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA63oAwed3ACvqegBv63kA/Op6
        AP/qegD/63kA/Ol5AHTreAAz63oAywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOp4AEjreQDb6XgAaOt6
        AEvreQDy63oA7+p6AEnpeABo63oA2up5AEoAAAAAAAAAAAAAAAAAAAAA44AAEux6AJ/reQD+6noA/+p6
        AP/segCS63oAMud3ACvsegCS6noA/+p6AP/qegD/7HoAn+OAABIAAAAA6XgAU+t5AOfqegD/6noA/+p6
        AP/qegD/6noA/+t5AKLqegCh6noA/+p6AP/qegD/6noA/+p6AP/reQDn6nkAVOp6AGLqeQD26noA/+p6
        AP/qegD/63oA++x6AJLweAAR8HgAEex6AJLregD76noA/+p6AP/qegD/6nkA9up6AGIAAAAA6XcAL+t5
        ANvqegD/63oAwOl3AC8AAAAAAAAAAAAAAAAAAAAA6XoALut6AMDqegD/6noA3Op6ADAAAAAAAAAAAAAA
        AADmewAf7HoAnf8AAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/AAAB63sAnOd4ACAAAAAAAAAAAAAA
        AADodwAt63oA2up6AP/reQC763wAJwAAAAAAAAAAAAAAAAAAAADrfAAn63kAu+p6AP/reQDb6XoALgAA
        AADpegBc6nkA9Op6AP/qegD/6noA/+p5APjsewCD43EACeNxAAnsewCD6nkA+Op6AP/qegD/6noA/+p6
        APXpegBe6XgAW+p6AOrqegD/6noA/+p6AP/qegD/6noA/+t5AKbreQCm6noA/+p6AP/qegD/6noA/+p6
        AP/qegDq6XgAWwAAAADneQAV63oApep6AP/qegD/6noA/+p6AKHfgAAI34AACOp6AKHqegD/6noA/+p6
        AP/reQCm53kAFQAAAAAAAAAAAAAAAAAAAADrewBN63kA4el5AHQAAAAAAAAAAAAAAAAAAAAA6XkAdOt5
        AOHrewBNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9VAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/VQADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAIAAAAEAAAAABACAAAAAAAAAU
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/wAAAf8AAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOh6ACzqegDC6noAwed5ACoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAO2AAA7reQCN6noA++l6AP/pegD/6nkA+up6AIjodAALAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAHpeABb6noA5ul6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6
        AODpeQBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoegAs6noAwOl6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6
        AP/pegD/6XoA/+l6AP/qegCy53gAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADtgAAO63kAjep6APvpegD/6XoA/+l6AP/pegD/6XoA/+l6
        AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD16HkAetWAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6XgAW+p6AObpegD/6XoA9+l6AP/pegD/6XoA/+l6
        AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l5APTpegD/6noA1ud6AEEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADpegD/6noA8Ol4AGjneQAV6noAwel6
        AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/qeQC374AAEOh6AG3pegD16noA7wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOt6AK/lewAd6HkAcOp5
        ANDneQAq6nsAnOl6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6noAlOp4ADHpegDV6HkAZet5
        ACbqeQC1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6nwAJep6
        AMLpegD/6XoA/+l6AOvqewA86XoAc+p5APzpegD/6XoA/+l6AP/pegD/6nkA/Op6AGvqeABI6noA8el6
        AP/pegD/6nkAueZ7AB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/4AAAuh5
        AHDpegD16XoA/+l6AP/pegD/6XoA/+l5APjoegBa53oAS+p6APHpegD/6XoA/+p6APDpegBH6XkAaep5
        APzpegD/6XoA/+l6AP/pegD/6noA8eh5AGX/AAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOh8
        ACHqegDA6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+p5AP7oeAB76HoALOl5AN/pegDe6HcALet6
        AIzpegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+p6ALjsewAbAAAAAAAAAAAAAAAAAAAAAP8A
        AAHqegBr6noA8+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/qegCf7XYAHOZ7
        AB/regCv6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+p6AO/qegBgAAAAAAAA
        AADofAAh6noAvul6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6
        AP/qegCI6noAoel6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6
        AP/qegC07HsAG+l6AKXpegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6
        AP/qegDv6XkAaf+AAAL/ZgAF6XkAdul5APTpegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6
        AP/pegD/6XoA/+l6AP/qegCV/wAAAel6AIDqeQD+6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6
        AP/pegD/6XkApOl6ABcAAAAAAAAAAAAAAAAAAAAA5nsAH+l6ALDpegD/6XoA/+l6AP/pegD/6XoA/+l6
        AP/pegD/6XoA/+l6AP/qeQD86XoAcwAAAAAAAAAAAAAAAOh7AE3qegDv6XoA/+l6AP/pegD/6XoA/+l6
        AP/pegD/6noA2eh6AEMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOh7AE/pegDg6XoA/+l6
        AP/pegD/6XoA/+l6AP/pegD/6XoA6uh6AEMAAAAAAAAAAAAAAAAAAAAAAAAAAOt5ACbpegDV6XoA/+l6
        AP/pegD/6XoA9+l4AH/bbQAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOh0
        AAvrewCJ6nkA+ul6AP/pegD/6XoA/+p5AMzmewAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOt2
        AA3qegCt6XoA/+p6ALrqeAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADoegAs6noAw+l6AP/reQCi43EACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP+AAALoeQB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/gAAC6XkAdv8AAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADrdgAN6noArul6AP/qegC66ngAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5nYAKep6AL7pegD/6nkAqOh0AAsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA63kAJul6ANXpegD/6XoA/+l6AP/pegD36XgAfdttAAcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA34AACOp7AIPpeQD46XoA/+l6AP/pegD/6noA0el4
        ACIAAAAAAAAAAAAAAAAAAAAAAAAAAOh5AE7qegDx6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6noA1ud6
        AEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOl6AEfqegDc6XoA/+l6AP/pegD/6XoA/+l6
        AP/pegD/6XoA7el4AEYAAAAAAAAAAP8AAAHpegCA6nkA/ul6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6
        AP/pegD/6nkA/up6AJ/neQAVAAAAAAAAAAAAAAAAAAAAAOt6ABnqeQCo6XoA/+l6AP/pegD/6XoA/+l6
        AP/pegD/6XoA/+l6AP/pegD/6nkA/Ol5AHb/AAAB6XkApOl6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6
        AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AOzoegBk/wAAAf+AAALqeABs6noA8Ol6AP/pegD/6XoA/+l6
        AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+t6AJfofAAh6noAvul6AP/pegD/6XoA/+l6
        AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/qegCI63oAmOl6AP/pegD/6XoA/+l6
        AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/qegC07HsAGwAAAAD/AAAB6noAa+p6
        APPpegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/63oAo9WAAAbmgAAK63oAr+l6
        AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/qegDv6noAYAAAAAAAAAAAAAAAAAAA
        AAAAAAAA6HwAIep6AL7pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6nkA/ul6AID/AAABAAAAAAAA
        AAD/VQAD63oAjOl6AP/pegD/6XoA/+l6AP/pegD/6XoA/+l6AP/pegD/6noAtOx7ABsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/wAAAeh6AG/pegD16XoA/+l6AP/pegD/6XoA/+l6APnpegBcAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6XkAaep5APzpegD/6XoA/+l6AP/pegD/6noA8eh5AGUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOp8ACXqegDC6XoA/+l6AP/pegDs6nkAPQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6XoAR+p6APDpegD/6XoA/+p5ALnmdwAeAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+AAALoeQBw6nkAzup4
        ACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6HoALOl5ANLoeQBl/wAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>